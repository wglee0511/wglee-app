name: production-build

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    tags:
      - v1.*.*
      - v2.*.*
      - v3.*.*

jobs:
  build:
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout source code. # 레포지토리 체크아웃
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies # 의존 파일 설치
        env:
          NPM_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: create .env-cmdrc.json file
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: ".env-cmdrc.json"
          json: ${{ secrets.SERVERLESS_ENV_JSON }}

      - name: copy file
        uses: canastro/copy-file-action@master
        with:
          source: ".env.prod"
          target: ".env"

    Deploy-Production:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Install Vercel CLI
          run: npm install --global vercel@latest
        - name: Pull Vercel Environment Information
          run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        - name: Build Project Artifacts
          run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        - name: Deploy Project Artifacts to Vercel
          run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
